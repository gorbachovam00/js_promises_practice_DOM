{"mappings":"ACEA,SAAS,gBAAgB,CAAC,mBAAoB,WAC5C,IAAI,EAAoB,CAAA,EACpB,EAAqB,CAAA,EAEnB,EAAe,IAAI,QAAQ,SAAC,CAAA,CAAS,CAA3C,EACE,IAAM,EAAmB,WACvB,EAAQ,8DACR,SAAS,mBAAmB,CAAC,QAAS,GACtC,aAAa,EACf,EAEA,SAAS,gBAAgB,CAAC,QAAS,GAEnC,IAAM,EAAY,WAAW,WAC3B,EAAO,0DACP,SAAS,mBAAmB,CAAC,QAAS,EACxC,EAAG,IACL,GAEM,EAAgB,IAAI,QAAQ,SAAC,CAAnC,EACE,IAAM,EAAe,WACnB,EAAQ,+BACR,SAAS,mBAAmB,CAAC,QAAS,EACxC,EAEA,SAAS,gBAAgB,CAAC,QAAS,GACnC,SAAS,gBAAgB,CAAC,cAAe,EAC3C,GAEM,EAAe,IAAI,QAAQ,SAAC,CAAlC,EAeW,IAAA,EAAT,WACM,GAAqB,IACvB,EAEE,6EAEF,SAAS,mBAAmB,CAAC,QAAS,GACtC,SAAS,mBAAmB,CAAC,cAAe,GAEhD,EAvBM,EAAmB,WACvB,EAAoB,CAAA,EACpB,GACF,EAEM,EAAoB,SAAC,CAA3B,EACE,EAAM,cAAc,GACpB,EAAqB,CAAA,EACrB,GACF,EAEA,SAAS,gBAAgB,CAAC,QAAS,GACnC,SAAS,gBAAgB,CAAC,cAAe,EAY3C,GAEA,SAAS,EAAiB,CAAO,CAAE,CAAS,EAC1C,IAAM,EAAe,SAAS,aAAa,CAAC,OAE5C,EAAa,YAAY,CAAC,UAAW,gBACrC,EAAa,SAAS,CAAG,EAAY,UAAY,QACjD,EAAa,WAAW,CAAG,EAC3B,SAAS,IAAI,CAAC,WAAW,CAAC,EAC5B,CAEA,EACG,IAAI,CAAC,SAAC,CADT,EAEI,EAAiB,EAAS,CAAA,EAC5B,GACC,KAAK,CAAC,SAAC,CADR,EAEE,EAAiB,EAAO,CAAA,EAC1B,GAEF,EAAc,IAAI,CAAC,SAAC,CAApB,EACE,EAAiB,EAAS,CAAA,EAC5B,GAEA,EAAa,IAAI,CAAC,SAAC,CAAnB,EACE,EAAiB,EAAS,CAAA,EAC5B,EACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["/* eslint-disable prefer-promise-reject-errors */ /* eslint-disable no-shadow */ document.addEventListener('DOMContentLoaded', function() {\n    var leftClickOccurred = false;\n    var rightClickOccurred = false;\n    var firstPromise = new Promise(function(resolve, reject) {\n        var leftClickHandler = function() {\n            resolve('First promise was resolved on a left click in the document');\n            document.removeEventListener('click', leftClickHandler);\n            clearTimeout(timeoutId);\n        };\n        document.addEventListener('click', leftClickHandler);\n        var timeoutId = setTimeout(function() {\n            reject('First promise was rejected in 3 seconds if not clicked');\n            document.removeEventListener('click', leftClickHandler);\n        }, 3000);\n    });\n    var secondPromise = new Promise(function(resolve) {\n        var clickHandler = function() {\n            resolve('Second promise was resolved');\n            document.removeEventListener('click', clickHandler);\n        };\n        document.addEventListener('click', clickHandler);\n        document.addEventListener('contextmenu', clickHandler);\n    });\n    var thirdPromise = new Promise(function(resolve) {\n        var checkBothClicks = function checkBothClicks() {\n            if (leftClickOccurred && rightClickOccurred) {\n                resolve(// eslint-disable-next-line max-len\n                'Third promise was resolved only after both left and right clicks happened');\n                document.removeEventListener('click', leftClickHandler);\n                document.removeEventListener('contextmenu', rightClickHandler);\n            }\n        };\n        var leftClickHandler = function() {\n            leftClickOccurred = true;\n            checkBothClicks();\n        };\n        var rightClickHandler = function(event) {\n            event.preventDefault();\n            rightClickOccurred = true;\n            checkBothClicks();\n        };\n        document.addEventListener('click', leftClickHandler);\n        document.addEventListener('contextmenu', rightClickHandler);\n    });\n    function showNotification(message, isSuccess) {\n        var notification = document.createElement('div');\n        notification.setAttribute('data-qa', 'notification');\n        notification.className = isSuccess ? 'success' : 'error';\n        notification.textContent = message;\n        document.body.appendChild(notification);\n    }\n    firstPromise.then(function(message) {\n        showNotification(message, true);\n    }).catch(function(error) {\n        showNotification(error, false);\n    });\n    secondPromise.then(function(message) {\n        showNotification(message, true);\n    });\n    thirdPromise.then(function(message) {\n        showNotification(message, true);\n    });\n});\n\n//# sourceMappingURL=index.cc28ae7b.js.map\n","/* eslint-disable prefer-promise-reject-errors */\n/* eslint-disable no-shadow */\ndocument.addEventListener('DOMContentLoaded', function () {\n  let leftClickOccurred = false;\n  let rightClickOccurred = false;\n\n  const firstPromise = new Promise((resolve, reject) => {\n    const leftClickHandler = () => {\n      resolve('First promise was resolved on a left click in the document');\n      document.removeEventListener('click', leftClickHandler);\n      clearTimeout(timeoutId);\n    };\n\n    document.addEventListener('click', leftClickHandler);\n\n    const timeoutId = setTimeout(() => {\n      reject('First promise was rejected in 3 seconds if not clicked');\n      document.removeEventListener('click', leftClickHandler);\n    }, 3000);\n  });\n\n  const secondPromise = new Promise((resolve) => {\n    const clickHandler = () => {\n      resolve('Second promise was resolved');\n      document.removeEventListener('click', clickHandler);\n    };\n\n    document.addEventListener('click', clickHandler);\n    document.addEventListener('contextmenu', clickHandler);\n  });\n\n  const thirdPromise = new Promise((resolve) => {\n    const leftClickHandler = () => {\n      leftClickOccurred = true;\n      checkBothClicks();\n    };\n\n    const rightClickHandler = (event) => {\n      event.preventDefault();\n      rightClickOccurred = true;\n      checkBothClicks();\n    };\n\n    document.addEventListener('click', leftClickHandler);\n    document.addEventListener('contextmenu', rightClickHandler);\n\n    function checkBothClicks() {\n      if (leftClickOccurred && rightClickOccurred) {\n        resolve(\n          // eslint-disable-next-line max-len\n          'Third promise was resolved only after both left and right clicks happened',\n        );\n        document.removeEventListener('click', leftClickHandler);\n        document.removeEventListener('contextmenu', rightClickHandler);\n      }\n    }\n  });\n\n  function showNotification(message, isSuccess) {\n    const notification = document.createElement('div');\n\n    notification.setAttribute('data-qa', 'notification');\n    notification.className = isSuccess ? 'success' : 'error';\n    notification.textContent = message;\n    document.body.appendChild(notification);\n  }\n\n  firstPromise\n    .then((message) => {\n      showNotification(message, true);\n    })\n    .catch((error) => {\n      showNotification(error, false);\n    });\n\n  secondPromise.then((message) => {\n    showNotification(message, true);\n  });\n\n  thirdPromise.then((message) => {\n    showNotification(message, true);\n  });\n});\n"],"names":["document","addEventListener","leftClickOccurred","rightClickOccurred","firstPromise","Promise","resolve","reject","leftClickHandler","removeEventListener","clearTimeout","timeoutId","setTimeout","secondPromise","clickHandler","thirdPromise","checkBothClicks","rightClickHandler","event","preventDefault","showNotification","message","isSuccess","notification","createElement","setAttribute","className","textContent","body","appendChild","then","catch","error"],"version":3,"file":"index.cc28ae7b.js.map"}